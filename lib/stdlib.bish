# Bish standard library functions. The standard library is special in
# that it is imported by default into all bish scripts. Additionally,
# functions defined in this file can be called without a
# namespace. For example, one can just call "println(...)" instead of
# "stdlib.println(...)".

# Print the given string without new line.
def print(s) {
    @(printf '%b' "$s");
}

# Print the given string with new line.
def println(s) {
    @(printf '%b\n' "$s");
}

# Return true if the given file exists.
def exists(file) {
    @(test -e $file);
    return success();
}

# Return true if the last command exited with status 0.
def success() {
    rc = @(echo $(?));
    if (rc == 0) {
        return true;
    } else {
        return false;
    }
}

# List files.
def ls() {
    return @(ls);
}

# Change directories.
def cd(path) {
    @(cd $path);
}

# Get current directory.
def cwd() {
    return @(pwd);
}

# Return the absolute path for relative path 'relpath'.
def abspath(relpath) {
   return @(cd $relpath ; pwd);
}

# Terminate the shell if 'v' is false.
def assert(v) {
    if (v == false) {
      println("Assertion failed.");
      @(exit 1);
    }
}

# Return the length of array 'arr'.
def len(arr) {
    return @(echo \${#arr[@]})
}
